[versions]
kotlin = "2.2.0"
accompanist-permissions = "0.37.3"
ktor = "3.2.0"
dokka = "2.0.0"
kotlinx-datetime = "0.6.2"
kermit = "2.0.6"
atomicfu = "0.28.0"
coroutines = "1.10.2"
android-lifecycle = "2.9.1"
androidx-startup = "1.2.0"
androidx-activity-compose = "1.10.1"
multiplatform-settings = "1.3.0"
complete-kotlin = "1.1.0"
agp = "8.9.2"
maven-publish = "0.33.0"
apollo-kotlin = "4.3.0"
#korlibs = "6.0.0"
detekt = "1.23.8"
moshi = "1.15.2"
jackson = "2.19.1"
browser = "1.8.0"
googleid = "1.1.1"
compose = "1.8.1"
androidsvg = "1.4"
imageloader = "1.9.0"
coil2 = "2.7.0"
coil3 = "3.2.0"
okio = "3.13.0"
credentials = "1.5.0"
koin = "4.0.4"
androidx-core = "1.16.0"
androidx-compat = "1.7.1"
androidx-lifecycle = "2.9.1"
filekit = "0.8.8"
kotlinx-browser = "0.3"
secure-random = "0.5.1"
ksp = "2.1.21-2.0.2"
kotlin-poet = "2.0.0"

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlinx-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
complete-kotlin = { id = "com.louiscad.complete-kotlin", version.ref = "complete-kotlin" }
android-library = { id = "com.android.library", version.ref = "agp" }
maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "maven-publish" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

compose-plugin = { id = "org.jetbrains.compose", version.ref = "compose" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

native-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinx-atomicfu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "atomicfu" }
power-assert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }

[libraries]
ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kotlin-poet = { module = "com.squareup:kotlinpoet", version.ref = "kotlin-poet" }
kotlin-poet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlin-poet" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-browser = { module = "org.jetbrains.kotlinx:kotlinx-browser", version.ref = "kotlinx-browser" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

kotlin-multiplatform-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
power-assert-gradle = { module = "org.jetbrains.kotlin.plugin.power-assert:org.jetbrains.kotlin.plugin.power-assert.gradle.plugin", version.ref = "kotlin" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
publishing-gradle = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "maven-publish" }
compose-gradle = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

android-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "android-lifecycle" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "androidx-startup" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-compat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-compat" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
android-google-id = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleid" }
androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "credentials" }
androidx-credentials-play-services = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "credentials" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform-settings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatform-settings" }

apollo-kotlin = { module = "com.apollographql.apollo:apollo-runtime", version.ref = "apollo-kotlin" }

#krypto = { module = "com.soywiz:korlibs-crypto", version.ref = "korlibs" }
secure-random = { module = "org.kotlincrypto.random:crypto-rand", version.ref = "secure-random" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }

jackson = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

androidsvg = { module = "com.caverock:androidsvg-aar", version.ref = "androidsvg" }
turbine = { module = "app.cash.turbine:turbine", version = "1.2.0" }

coil3 = { module = "io.coil-kt.coil3:coil", version.ref = "coil3" }
coil3-network-core = { module = "io.coil-kt.coil3:coil-network-core", version.ref = "coil3" }
coil2 = { module = "io.coil-kt:coil", version.ref = "coil2" }
imageloader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "imageloader" }

# Sample dependencies
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
filekit-core = { module = "io.github.vinceglb:filekit-core", version.ref = "filekit" }
filekit-compose = { module = "io.github.vinceglb:filekit-compose", version.ref = "filekit" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist-permissions" }
coil2-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil2" }
coil2-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil2" }

[bundles]
ktor-client = ["ktor-client-core", "ktor-client-content-negotiation", "ktor-json"]
multiplatform-settings = ["multiplatform-settings-no-arg", "multiplatform-settings-coroutines"]
testing = ["kotlinx-coroutines-test", "multiplatform-settings-test", "ktor-client-mock", "kotlin-test"]
moshi = ["moshi", "moshi-kotlin"]
jackson = ["jackson", "jackson-kotlin"]
coil3 = ["coil3", "coil3-network-core"]
